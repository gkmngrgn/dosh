version: 2.1

orbs:
  windows: circleci/windows@5.0.0
  python: circleci/python@2.0.3

filters-release: &filters-release
  branches:
    only: main
  tags:
    only: /^v\d+\.\d+\.\d+$/

filters-development: &filters-development
  branches:
    ignore: main

jobs:
  lint:
    executor:
      name: "python/default"
      tag: "3.9"

    steps:
      - checkout

      - python/install-packages:
          pkg-manager: "poetry"

      - run: poetry run pip install pre-commit

      - run:
          name: "Create a temporary file for getting a cache key"
          command: |
            cp .pre-commit-config.yaml /tmp/checksum.txt
            poetry run python --version >> /tmp/checksum.txt

      - restore_cache:
          key: pre-commit-{{ checksum "/tmp/checksum.txt" }}

      - run: poetry run poe lint

      - save_cache:
          key: pre-commit-{{ checksum "/tmp/checksum.txt" }}
          paths:
            - ~/.cache/pre-commit

  build-on-linux:
    executor:
      name: "python/default"
      tag: "3.9"

    steps:
      - checkout

      - run:
          name: "Build project"
          command: |
            poetry install --no-dev
            poetry run pyinstaller app.py --name=dosh --noconfirm
            mv dist dist-linux

      - persist_to_workspace:
          root: .
          paths:
            - "dist-linux"

  build-on-macos:
    macos:
      xcode: 12.5.1

    steps:
      - checkout

      - run:
          name: "Build project"
          command: |
            curl -sSL https://install.python-poetry.org | python3 -
            export PATH="/Users/distiller/Library/Python/3.9/bin:$PATH"

            poetry install --no-dev
            poetry run pyinstaller app.py --name=dosh --console --noconfirm

            mv dist dist-macos

      - persist_to_workspace:
          root: .
          paths:
            - "dist-macos"

  build-on-windows:
    executor: windows/server-2022

    steps:
      - checkout

      - run:
          name: "Build project"
          command: |
            Invoke-WebRequest -UseBasicParsing -Uri "https://raw.githubusercontent.com/pyenv-win/pyenv-win/master/pyenv-win/install-pyenv-win.ps1" -OutFile "./install-pyenv-win.ps1"; &"./install-pyenv-win.ps1"

            pyenv --help

            pyenv install 3.9.13
            pyenv global 3.9.13

            python --version

            pip install poetry
            poetry install --no-dev
            poetry run pyinstaller app.py --name=dosh --console --noconfirm

            mv dist dist-windows

  release:
    docker:
      - image: cimg/base:2022.08

    steps:
      - attach_workspace:
          at: .

      - run: |
          mkdir release

          cd ./dist-linux && tar -czvf dosh-x86_64-linux.tar.gz ./dosh/* && cd ..
          cd ./dist-macos && tar -czvf dosh-x86_64-macos.tar.gz ./dosh/* && cd ..

          cp ./dist-*/*.tar.gz ./release/

      - store_artifacts:
          path: "release"

workflows:
  pr-checks:
    jobs:
      - lint:
          filters: *filters-development

      - python/test:
          matrix:
            parameters:
              version: ["3.9", "3.10"]
          filters: *filters-development

  main:
    jobs:
      - build-on-linux:
          filters: *filters-release

      - build-on-macos:
          filters: *filters-release

      - build-on-windows:
          filters: *filters-development

      - release:
          requires:
            - build-on-linux
            - build-on-macos
            - build-on-windows
          filters: *filters-release
