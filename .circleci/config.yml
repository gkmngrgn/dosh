version: 2.1

orbs:
  windows: circleci/windows@5.0.0
  python: circleci/python@2.0.3

filters-release: &filters-release
  branches:
    only: main
  tags:
    only: /^v\d+\.\d+\.\d+$/

filters-development: &filters-development
  branches:
    ignore: main

jobs:
  lint:
    executor:
      name: "python/default"
      tag: "3.9"

    steps:
      - checkout

      - python/install-packages:
          pkg-manager: "poetry"

      - run: poetry run pip install pre-commit

      - run:
          name: "Create a temporary file for getting a cache key"
          command: |
            cp .pre-commit-config.yaml /tmp/checksum.txt
            poetry run python --version >> /tmp/checksum.txt

      - restore_cache:
          key: pre-commit-{{ checksum "/tmp/checksum.txt" }}

      - run: poetry run poe lint

      - save_cache:
          key: pre-commit-{{ checksum "/tmp/checksum.txt" }}
          paths:
            - ~/.cache/pre-commit

  build-on-linux:
    executor:
      name: "python/default"
      tag: "3.9"

    steps:
      - checkout

      - run:
          name: "Build project"
          command: |
            poetry install --no-dev
            poetry run pyinstaller app.py --name=dosh --noconfirm

            PYTHON_VERSION=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:3])))')
            DIR_NAME=dosh-linux-x86_64-py${PYTHON_VERSION}

            cd ./dist/
            mv dosh $DIR_NAME
            tar -czvf $DIR_NAME.tar.gz $DIR_NAME/*

      - persist_to_workspace:
          root: "dist"
          paths:
            - "dosh-*.tar.gz"

  build-on-macos:
    macos:
      xcode: 12.5.1

    steps:
      - checkout

      - run:
          name: "Build project"
          command: |
            pip3 install poetry
            poetry install --no-dev
            poetry run pyinstaller app.py --name=dosh --console --noconfirm

            PYTHON_VERSION=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:3])))')
            DIR_NAME=dosh-macos-x86_64-py${PYTHON_VERSION}

            cd ./dist/
            mv dosh $DIR_NAME
            tar -czvf $DIR_NAME.tar.gz $DIR_NAME/*

      - persist_to_workspace:
          root: "dist"
          paths:
            - "dosh-*.tar.gz"

  build-on-windows:
    executor: windows/server-2022

    steps:
      - checkout

      - run:
          name: "Build project"
          shell: "bash.exe"
          command: |
            pip install poetry
            poetry install --no-dev
            poetry run pyinstaller app.py --name=dosh --console --noconfirm

            PYTHON_VERSION=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:3])))')
            DIR_NAME=dosh-windows-x86_64-py${PYTHON_VERSION}

            cd ./dist/
            mv dosh $DIR_NAME
            tar -czvf $DIR_NAME.tar.gz $DIR_NAME/*

      - persist_to_workspace:
          root: "dist"
          paths:
            - "dosh-*.tar.gz"

  release:
    docker:
      - image: cimg/base:2022.08

    steps:
      - attach_workspace:
          at: .

      - store_artifacts:
          path: .

workflows:
  # pr-checks:
  #   jobs:
  #     - lint:
  #         filters: *filters-development

  #     - python/test:
  #         matrix:
  #           parameters:
  #             version: ["3.9", "3.10"]
  #         filters: *filters-development

  main:
    jobs:
      - build-on-linux:
          filters: *filters-development

      - build-on-macos:
          filters: *filters-release

      - build-on-windows:
          filters: *filters-development

      - release:
          requires:
            - build-on-linux
            # - build-on-macos
            # - build-on-windows
          filters: *filters-development
