version: 2.1

orbs:
  python: circleci/python@2
  windows: circleci/windows@5

aliases:
  - python-tag: &python-tag "3.9"
  - filters-dev: &filters-dev
      branches:
        ignore: main

jobs:
  lint:
    executor:
      name: "python/default"
      tag: *python-tag

    steps:
      - checkout
      - python/install-packages:
          pkg-manager: "poetry"
          args: "--no-ansi"
      - run:
          name: Create a temporary file for getting a cache key
          command: |
            cp .pre-commit-config.yaml /tmp/checksum.txt
            python --version >> /tmp/checksum.txt
      - restore_cache:
          key: pre-commit-{{ checksum "/tmp/checksum.txt" }}
      - run:
          name: Run pre-commit
          command: |
            poetry add pre-commit --no-ansi
            poetry run pre-commit run --all-files
      - save_cache:
          key: pre-commit-{{ checksum "/tmp/checksum.txt" }}
          paths:
            - ~/.cache/pre-commit

  test:
    parameters:
      python-tag:
        type: string

    executor:
      name: python/default
      tag: << parameters.python-tag >>

    steps:
      - checkout
      - python/test:
          pkg-manager: poetry
          test-tool: pytest

  test-windows:
    executor:
      name: windows/default
      shell: bash.exe

    steps:
      - checkout
      - run:
          name: Run tests
          command: |
            python -m pip install --upgrade pip
            python -m pip install --user pipx
            python -m pipx run poetry install --no-ansi
            python -m pipx run poetry run pytest --junit-xml=test-report/report.xml
      - store_test_results:
          path: test-report

workflows:
  pr-checks:
    jobs:
      - lint:
          filters: *filters-dev
      - test:
          matrix:
            parameters:
              python-tag: ["3.8", "3.9", "3.10", "3.11"]
          filters: *filters-dev
      - test-windows:
          filters: *filters-dev
