version: 2.1

orbs:
  windows: circleci/windows@5.0.0
  python: circleci/python@2.0.3

filters-release: &filters-release
  branches:
    only: main
  tags:
    only: /^v\d+\.\d+\.\d+$/

filters-development: &filters-development
  branches:
    ignore: main

commands:
  build:
    parameters:
      directory:
        type: string

    steps:
      - checkout

      - python/install-packages:
          pkg-manager: "poetry"

      - run: |
          poetry run poe build
          mv dist << parameters.directory >>

      - store_artifacts:
          path: << parameters.directory >>

      - persist_to_workspace:
          root: .
          paths:
            - << parameters.directory >>

jobs:
  lint:
    executor:
      name: "python/default"
      tag: "3.9"

    steps:
      - checkout

      - python/install-packages:
          pkg-manager: "poetry"

      - run: poetry run pip install pre-commit

      - run:
          command: |
            cp .pre-commit-config.yaml /tmp/checksum.txt
            poetry run python --version >> /tmp/checksum.txt

      - restore_cache:
          key: pre-commit-{{ checksum "/tmp/checksum.txt" }}

      - run: poetry run poe lint

      - save_cache:
          key: pre-commit-{{ checksum "/tmp/checksum.txt" }}
          paths:
            - ~/.cache/pre-commit

  build-on-linux:
    executor:
      name: "python/default"
      tag: "3.9"

    steps:
      - build:
          directory: "dist-linux"

  build-on-macos:
    macos:
      xcode: 12.5.1

    steps:
      - build:
          directory: "dist-macos"

  build-on-windows:
    executor: windows/server-2022

    steps:
      - build:
          directory: "dist-windows"

  release:
    docker:
      - image: cimg/base:2022.08

    steps:
      - attach_workspace:
          at: .

      # install zip package.
      # archive folders.
      # publish.
      - run: |
          ls

workflows:
  pr-checks:
    jobs:
      - lint:
          filters: *filters-development

      - python/test:
          matrix:
            parameters:
              version: ["3.9", "3.10"]
          filters: *filters-development

  main:
    jobs:
      - build-on-linux:
          filters: *filters-release

      - build-on-macos:
          filters: *filters-release

      - build-on-windows:
          filters: *filters-release

      - release:
          requires:
            - build-on-linux
            - build-on-macos
            - build-on-windows
          filters: *filters-release
